$date
	Sat Aug 31 10:50:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module dec4to16_tb $end
$var wire 16 ! out [15:0] $end
$var reg 1 " EN $end
$var reg 4 # W [3:0] $end
$scope module d4to16 $end
$var wire 1 " EN $end
$var wire 4 $ W [3:0] $end
$var wire 16 % out [15:0] $end
$var wire 4 & en [3:0] $end
$scope module d1 $end
$var wire 1 " EN $end
$var wire 2 ' W [1:0] $end
$var reg 4 ( out [3:0] $end
$upscope $end
$scope module d2 $end
$var wire 1 ) EN $end
$var wire 2 * W [1:0] $end
$var reg 4 + out [3:0] $end
$upscope $end
$scope module d3 $end
$var wire 1 , EN $end
$var wire 2 - W [1:0] $end
$var reg 4 . out [3:0] $end
$upscope $end
$scope module d4 $end
$var wire 1 / EN $end
$var wire 2 0 W [1:0] $end
$var reg 4 1 out [3:0] $end
$upscope $end
$scope module d5 $end
$var wire 1 2 EN $end
$var wire 2 3 W [1:0] $end
$var reg 4 4 out [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 4
b0 3
02
b0 1
b0 0
0/
b0 .
b0 -
0,
b0 +
b0 *
0)
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#20
b10 '
b1000 #
b1000 $
#40
b100 +
1)
b100 !
b100 %
b0 1
0/
b0 '
b10 *
b10 -
b10 0
b10 3
b1 &
b1 (
b10 #
b10 $
1"
#60
b10 .
1,
0)
b10 &
b10 (
b100000 !
b100000 %
b0 +
b1 '
b1 *
b1 -
b1 0
b1 3
b101 #
b101 $
#80
b10000000 !
b10000000 %
b1000 .
b11 *
b11 -
b11 0
b11 3
b111 #
b111 $
#100
b100 4
12
0,
b1000 &
b1000 (
b100000000000000 !
b100000000000000 %
b0 .
b11 '
b10 *
b10 -
b10 0
b10 3
b1110 #
b1110 $
#120
b1000000000000 !
b1000000000000 %
b1 4
b0 *
b0 -
b0 0
b0 3
b1100 #
b1100 $
#140
