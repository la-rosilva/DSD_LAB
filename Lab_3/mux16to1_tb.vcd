$date
	Sat Aug 24 10:38:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mux16to1_tb $end
$var wire 1 ! out $end
$var reg 16 " in [15:0] $end
$var reg 4 # sel [3:0] $end
$scope module m16to1 $end
$var wire 16 $ in [15:0] $end
$var wire 4 % sel [3:0] $end
$var wire 1 ! out $end
$var wire 1 & mux2_out $end
$var wire 1 ' mux1_out $end
$scope module mux1 $end
$var wire 8 ( in [7:0] $end
$var wire 3 ) sel [2:0] $end
$var reg 1 ' out $end
$upscope $end
$scope module mux2 $end
$var wire 8 * in [7:0] $end
$var wire 3 + sel [2:0] $end
$var reg 1 & out $end
$upscope $end
$scope module mux3 $end
$var wire 1 ' a $end
$var wire 1 & b $end
$var wire 1 , sel $end
$var reg 1 ! out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0,
b0 +
b10101010 *
b0 )
b10101010 (
0'
0&
b0 %
b1010101010101010 $
b0 #
b1010101010101010 "
0!
$end
#10
1!
1'
1&
b1 )
b1 +
b1 #
b1 %
#20
0!
0'
0&
b10 )
b10 +
b10 #
b10 %
#30
1!
1'
1&
b11 )
b11 +
b11 #
b11 %
#40
0!
0'
0&
b100 )
b100 +
b100 #
b100 %
#50
1!
1'
1&
b101 )
b101 +
b101 #
b101 %
#60
0!
0'
0&
b110 )
b110 +
b110 #
b110 %
#70
1!
1'
1&
b111 )
b111 +
b111 #
b111 %
#80
0!
0'
0&
b0 )
b0 +
1,
b1000 #
b1000 %
#90
1!
1'
1&
b1 )
b1 +
b1001 #
b1001 %
#100
0!
0'
0&
b10 )
b10 +
b1010 #
b1010 %
#110
1!
1'
1&
b11 )
b11 +
b1011 #
b1011 %
#120
0!
0'
0&
b100 )
b100 +
b1100 #
b1100 %
#130
1!
1'
1&
b101 )
b101 +
b1101 #
b1101 %
#140
0!
0'
0&
b110 )
b110 +
b1110 #
b1110 %
#150
1!
1'
1&
b111 )
b111 +
b1111 #
b1111 %
#160
